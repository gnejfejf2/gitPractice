# This is a basic workflow to help you get started with Actions

name: DevelopCI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-12.2.1
    env:
      TARGET_ENV: dev
      XCWORKSPACE: gitProject.xcodepro
      #PROJECT: pineapp.xcodeproj
      SCHEME: PineApp
      #CONFIGURATION: Debug
      DESTINATION: platform=iOS Simulator,name=iPhone 13
    #  MATTERMOST_WEBHOOK_URL: https://mattermost.hwikx.com/hooks/cip4am3x4f885b7ayt4gu5ug1a
    #  MATTERMOST_WEBHOOK_CHANNEL: private_mattermost_chat_test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

#      - name: Send CI Start Message
#        run: |
#          curl -i -X POST ${{ env.MATTERMOST_WEBHOOK_URL }} \
#          -H 'Content-Type: application/json' \
#          --data '{"channel":"${{ env.MATTERMOST_WEBHOOK_CHANNEL }}","attachments":[{"color":"#00bfff","text":"##### [iOS CI Action Start]
#          `Project Name` : ${{ github.repository }} (Run Number: ${{ github.run_number }})
#          `Target Env` : ${{ env.TARGET_ENV }}
#          `PR Number` : ${{ github.ref_name }}
#          `Request Uername` : ${{ github.actor }}
#          `Request Type` : ${{ github.event_name }}"}]}'

      # Runs a single command using the runners shell
      - name: Check Xcode
        run: ls -n /Applications/ | grep Xcode

      # Runs a set of commands using the runners shell
      - name: Build
        run: |
         xcodebuild clean test -workspace "$XCWORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION"
      - name: Comment To PR (Success)
        uses: actions/github-script@v5.0.0
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Code test completed successfully!'
            })
